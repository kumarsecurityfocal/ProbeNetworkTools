version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: ${PGUSER:-postgres}
      POSTGRES_PASSWORD: ${PGPASSWORD:-probeops}
      POSTGRES_DB: ${PGDATABASE:-probeops}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PGUSER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
    environment:
      - PGUSER=${PGUSER:-postgres}
      - PGPASSWORD=${PGPASSWORD:-probeops}
      - PGHOST=${PGHOST:-db}
      - PGPORT=${PGPORT:-5432}
      - PGDATABASE=${PGDATABASE:-probeops}
      - SECRET_KEY=${SECRET_KEY:-change-this-to-a-secure-secret-key}
      - DEBUG=${DEBUG:-false}
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./backend:/app

  # React Frontend
  frontend:
    build:
      context: ./frontend
    environment:
      - VITE_API_URL=${VITE_API_URL:-/api}
    ports:
      - "5000:5000"
    depends_on:
      - backend
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # Probe Agent
  probe:
    build:
      context: ./probe
    environment:
      - BACKEND_URL=${BACKEND_URL:-http://backend:8000}
      - API_KEY=${API_KEY}
      - INTERVAL_SECONDS=${INTERVAL_SECONDS:-300}
      - TARGETS=${TARGETS:-example.com,google.com,cloudflare.com}
      - TOOLS=${TOOLS:-ping,dns}
      - LOG_LEVEL=INFO
    depends_on:
      - backend
    restart: unless-stopped
    volumes:
      - probe_logs:/var/log/probeops

  # NGINX Reverse Proxy
  nginx:
    build:
      context: ./nginx
    ports:
      - "${NGINX_PORT:-80}:80"
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    restart: unless-stopped

volumes:
  postgres_data:
  probe_logs:
