version: '3.8'

services:
  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY:-super-secret-key-change-in-production}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      - CORS_ORIGINS=http://localhost,http://frontend,https://probeops.com,https://www.probeops.com
    volumes:
      - ./backend:/app
    depends_on:
      - db
    networks:
      - probeops-network
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    environment:
      - VITE_API_URL=http://backend:8000
      - NODE_ENV=production
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - probeops-network

  # NGINX service (reverse proxy)
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    networks:
      - probeops-network
    # Volumes for SSL certificates (for future use)
    volumes:
      - ./nginx/ssl:/etc/letsencrypt

  # Probe service (network diagnostic agent)
  probe:
    build:
      context: ./probe
      dockerfile: Dockerfile
    restart: always
    environment:
      - BACKEND_URL=http://backend:8000
      - API_KEY=${PROBE_API_KEY}
    volumes:
      - ./probe:/app
    networks:
      - probeops-network
    depends_on:
      - backend

  # Database service (for local development only)
  # For production, use RDS - comment this out and set DATABASE_URL in env
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      - POSTGRES_USER=${PGUSER:-postgres}
      - POSTGRES_PASSWORD=${PGPASSWORD:-postgres}
      - POSTGRES_DB=${PGDATABASE:-probeops}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - probeops-network

networks:
  probeops-network:
    driver: bridge

volumes:
  postgres-data: