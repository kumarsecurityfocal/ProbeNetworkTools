version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:14
    container_name: probeops_db
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-probeops}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-probeopspassword}
      POSTGRES_DB: ${POSTGRES_DB:-probeops_db}
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-probeops}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - probeops_network

  # Backend API (FastAPI) with Auth Bypass
  backend:
    build:
      context: .
      dockerfile: docker/backend-auth-bypass.Dockerfile
    container_name: probeops_backend
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-probeops}:${POSTGRES_PASSWORD:-probeopspassword}@db:5432/${POSTGRES_DB:-probeops_db}
      - JWT_SECRET=${JWT_SECRET:-dev_secret_key_not_for_production}
      - JWT_ALGORITHM=${JWT_ALGORITHM:-HS256}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-3600}
      - AUTH_BYPASS=true
    ports:
      - "${API_PORT:-8000}:8000"
    volumes:
      - ./backend:/app
    networks:
      - probeops_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # API Proxy (Node.js Express) with Clean Proxy
  proxy:
    build:
      context: .
      dockerfile: docker/proxy-auth-bypass.Dockerfile
    container_name: probeops_proxy
    restart: always
    depends_on:
      - backend
    environment:
      - PORT=5000
      - BACKEND_URL=http://backend:8000
      - NODE_ENV=development
      - AUTH_BYPASS=true
    ports:
      - "${PROXY_PORT:-5000}:5000"
    volumes:
      - ./:/app
      - /app/node_modules
    networks:
      - probeops_network
    command: node server.clean.js

  # Frontend (React)
  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    container_name: probeops_frontend
    restart: always
    depends_on:
      - proxy
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:5000
      - VITE_AUTH_BYPASS=true
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - probeops_network
    command: npm run dev

  # Probe Node
  probe:
    build:
      context: .
      dockerfile: docker/probe.Dockerfile
    container_name: probeops_probe
    restart: always
    depends_on:
      - proxy
    environment:
      - PROXY_URL=http://proxy:5000
      - NODE_ENV=development
      - PROBE_ID=dev-probe-01
      - AUTH_BYPASS=true
    ports:
      - "${PROBE_PORT:-9000}:9000"
    volumes:
      - ./probe:/app
      - /app/node_modules
    networks:
      - probeops_network
    command: node probe.js

networks:
  probeops_network:
    driver: bridge

volumes:
  postgres_data: