version: '3.8'

services:
  # Backend API with Auth Bypass enabled
  backend:
    build:
      context: .
      dockerfile: docker/auth-bypass.Dockerfile
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - AUTH_BYPASS=true
      - JWT_SECRET_KEY=dev-jwt-secret-key
      - AUTH_BYPASS_MODE=true
      - SQLALCHEMY_WARN_20=ignore
      - LOG_LEVEL=DEBUG
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    networks:
      - probeops_network
    restart: unless-stopped

  # Clean API Proxy Server
  proxy:
    build:
      context: .
      dockerfile: docker/proxy.Dockerfile
    environment:
      - BACKEND_URL=http://backend:8000
      - PORT=5000
    ports:
      - "5000:5000"
    volumes:
      - ./public:/app/public
      - ./server.clean.js:/app/server.js
    networks:
      - probeops_network
    depends_on:
      - backend
    restart: unless-stopped

  # Direct Frontend Development
  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    environment:
      - VITE_API_URL=http://localhost:5000/api
      - VITE_DIRECT_BACKEND_URL=http://localhost:8000
      - VITE_DEV_MODE=true
      - VITE_AUTH_BYPASS=true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - probeops_network
    command: npm run dev
    depends_on:
      - proxy
    restart: unless-stopped

  # Probe Node (for development testing)
  probe:
    build:
      context: .
      dockerfile: docker/probe.Dockerfile
    environment:
      - API_URL=http://backend:8000
      - AUTH_BYPASS=true
      - DEV_MODE=true
      - NODE_UUID=dev-probe-node
      - NODE_NAME=Development Probe
    ports:
      - "9000:9000"
    volumes:
      - ./probe:/app
    networks:
      - probeops_network
    depends_on:
      - backend
    restart: unless-stopped

networks:
  probeops_network:
    driver: bridge